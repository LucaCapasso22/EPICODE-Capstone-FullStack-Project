# Configurazione Database
spring.datasource.url=${DB_URL:jdbc:postgresql://localhost:5432/rnbmx_shop}
spring.datasource.username=${DB_USERNAME:postgres}
spring.datasource.password=${DB_PASSWORD:password_placeholder}
spring.datasource.driver-class-name=org.postgresql.Driver
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.format_sql=true
# Aggiunto per gestire i valori null nei campi @NotNull durante la lettura
spring.jpa.properties.hibernate.check_nullability=false

# Inizializzazione DB: modifica a 'never' per evitare reset del database ad ogni avvio
# Impostalo su 'always' solo quando devi inizializzare il database con dati di test
spring.sql.init.mode=never
spring.sql.init.platform=postgresql
spring.sql.init.continue-on-error=true
spring.jpa.defer-datasource-initialization=true
spring.sql.init.data-locations=classpath:data.sql

# JWT Configurazione (chiave sicura di almeno 256 bit, codificata in Base64)
# Questa Ã¨ una chiave casuale generata con io.jsonwebtoken.security.Keys.secretKeyFor(SignatureAlgorithm.HS512)
# NON USARE QUESTA CHIAVE IN PRODUZIONE - GENERANE UNA NUOVA!
bmx.app.jwtSecret=${JWT_SECRET:jwt_secret_placeholder}
bmx.app.jwtExpirationMs=86400000

# Stripe Configurazione
stripe.api.key=${STRIPE_API_KEY:sk_test_placeholder}
stripe.secret-key=${STRIPE_SECRET_KEY:sk_test_placeholder}

# Server port
server.port=8080

# Configurazioni log
logging.level.org.springframework.security=INFO
logging.level.com.rnbmx.shop=DEBUG

# Risorse statiche
spring.mvc.static-path-pattern=/static/**

# Configurazioni Cross-Origin
spring.mvc.cors.allowed-origins=http://localhost:3000 